(function() {var type_impls = {
"chalk_ir":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-WithKind%3CI,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/chalk_ir/lib.rs.html#1550\">source</a><a href=\"#impl-Clone-for-WithKind%3CI,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"chalk_ir/interner/trait.Interner.html\" title=\"trait chalk_ir::interner::Interner\">Interner</a>, T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"chalk_ir/struct.WithKind.html\" title=\"struct chalk_ir::WithKind\">WithKind</a>&lt;I, T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/chalk_ir/lib.rs.html#1550\">source</a><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.81.0/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; <a class=\"struct\" href=\"chalk_ir/struct.WithKind.html\" title=\"struct chalk_ir::WithKind\">WithKind</a>&lt;I, T&gt;</h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"https://doc.rust-lang.org/1.81.0/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.81.0/src/core/clone.rs.html#172\">source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.81.0/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.reference.html\">&amp;Self</a>)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/1.81.0/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","chalk_ir::CanonicalVarKind"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-WithKind%3CI,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/chalk_ir/debug.rs.html#948-963\">source</a><a href=\"#impl-Debug-for-WithKind%3CI,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;I: <a class=\"trait\" href=\"chalk_ir/interner/trait.Interner.html\" title=\"trait chalk_ir::interner::Interner\">Interner</a>, T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"chalk_ir/struct.WithKind.html\" title=\"struct chalk_ir::WithKind\">WithKind</a>&lt;I, T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/chalk_ir/debug.rs.html#949-962\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.81.0/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, fmt: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.81.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.81.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.81.0/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","chalk_ir::CanonicalVarKind"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-HasInterner-for-WithKind%3CI,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/chalk_ir/lib.rs.html#1560-1562\">source</a><a href=\"#impl-HasInterner-for-WithKind%3CI,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;I: <a class=\"trait\" href=\"chalk_ir/interner/trait.Interner.html\" title=\"trait chalk_ir::interner::Interner\">Interner</a>, T&gt; <a class=\"trait\" href=\"chalk_ir/interner/trait.HasInterner.html\" title=\"trait chalk_ir::interner::HasInterner\">HasInterner</a> for <a class=\"struct\" href=\"chalk_ir/struct.WithKind.html\" title=\"struct chalk_ir::WithKind\">WithKind</a>&lt;I, T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Interner\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Interner\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"chalk_ir/interner/trait.HasInterner.html#associatedtype.Interner\" class=\"associatedtype\">Interner</a> = I</h4></section></summary><div class='docblock'>The interner associated with the type.</div></details></div></details>","HasInterner","chalk_ir::CanonicalVarKind"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Hash-for-WithKind%3CI,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/chalk_ir/lib.rs.html#1550\">source</a><a href=\"#impl-Hash-for-WithKind%3CI,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> + <a class=\"trait\" href=\"chalk_ir/interner/trait.Interner.html\" title=\"trait chalk_ir::interner::Interner\">Interner</a>, T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> for <a class=\"struct\" href=\"chalk_ir/struct.WithKind.html\" title=\"struct chalk_ir::WithKind\">WithKind</a>&lt;I, T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/chalk_ir/lib.rs.html#1550\">source</a><a href=\"#method.hash\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.81.0/core/hash/trait.Hash.html#tymethod.hash\" class=\"fn\">hash</a>&lt;__H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>&gt;(&amp;self, state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.reference.html\">&amp;mut __H</a>)</h4></section></summary><div class='docblock'>Feeds this value into the given <a href=\"https://doc.rust-lang.org/1.81.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"https://doc.rust-lang.org/1.81.0/core/hash/trait.Hash.html#tymethod.hash\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash_slice\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.3.0\">1.3.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.81.0/src/core/hash/mod.rs.html#238-240\">source</a></span><a href=\"#method.hash_slice\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.81.0/core/hash/trait.Hash.html#method.hash_slice\" class=\"fn\">hash_slice</a>&lt;H&gt;(data: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.slice.html\">[Self]</a>, state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.reference.html\">&amp;mut H</a>)<div class=\"where\">where\n    H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Feeds a slice of this type into the given <a href=\"https://doc.rust-lang.org/1.81.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"https://doc.rust-lang.org/1.81.0/core/hash/trait.Hash.html#method.hash_slice\">Read more</a></div></details></div></details>","Hash","chalk_ir::CanonicalVarKind"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-WithKind%3CI,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/chalk_ir/lib.rs.html#1550\">source</a><a href=\"#impl-PartialEq-for-WithKind%3CI,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> + <a class=\"trait\" href=\"chalk_ir/interner/trait.Interner.html\" title=\"trait chalk_ir::interner::Interner\">Interner</a>, T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> for <a class=\"struct\" href=\"chalk_ir/struct.WithKind.html\" title=\"struct chalk_ir::WithKind\">WithKind</a>&lt;I, T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/chalk_ir/lib.rs.html#1550\">source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.81.0/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"chalk_ir/struct.WithKind.html\" title=\"struct chalk_ir::WithKind\">WithKind</a>&lt;I, T&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>self</code> and <code>other</code> values to be equal, and is used\nby <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.81.0/src/core/cmp.rs.html#262\">source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.81.0/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>!=</code>. The default implementation is almost always\nsufficient, and should not be overridden without very good reason.</div></details></div></details>","PartialEq","chalk_ir::CanonicalVarKind"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-WithKind%3CI,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/chalk_ir/lib.rs.html#1570-1602\">source</a><a href=\"#impl-WithKind%3CI,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;I: <a class=\"trait\" href=\"chalk_ir/interner/trait.Interner.html\" title=\"trait chalk_ir::interner::Interner\">Interner</a>, T&gt; <a class=\"struct\" href=\"chalk_ir/struct.WithKind.html\" title=\"struct chalk_ir::WithKind\">WithKind</a>&lt;I, T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.new\" class=\"method\"><a class=\"src rightside\" href=\"src/chalk_ir/lib.rs.html#1572-1574\">source</a><h4 class=\"code-header\">pub fn <a href=\"chalk_ir/struct.WithKind.html#tymethod.new\" class=\"fn\">new</a>(kind: <a class=\"enum\" href=\"chalk_ir/enum.VariableKind.html\" title=\"enum chalk_ir::VariableKind\">VariableKind</a>&lt;I&gt;, value: T) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Creates a <code>WithKind</code> from a variable kind and a value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.map\" class=\"method\"><a class=\"src rightside\" href=\"src/chalk_ir/lib.rs.html#1577-1585\">source</a><h4 class=\"code-header\">pub fn <a href=\"chalk_ir/struct.WithKind.html#tymethod.map\" class=\"fn\">map</a>&lt;U, OP&gt;(self, op: OP) -&gt; <a class=\"struct\" href=\"chalk_ir/struct.WithKind.html\" title=\"struct chalk_ir::WithKind\">WithKind</a>&lt;I, U&gt;<div class=\"where\">where\n    OP: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(T) -&gt; U,</div></h4></section></summary><div class=\"docblock\"><p>Maps the value in <code>WithKind</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.map_ref\" class=\"method\"><a class=\"src rightside\" href=\"src/chalk_ir/lib.rs.html#1588-1596\">source</a><h4 class=\"code-header\">pub fn <a href=\"chalk_ir/struct.WithKind.html#tymethod.map_ref\" class=\"fn\">map_ref</a>&lt;U, OP&gt;(&amp;self, op: OP) -&gt; <a class=\"struct\" href=\"chalk_ir/struct.WithKind.html\" title=\"struct chalk_ir::WithKind\">WithKind</a>&lt;I, U&gt;<div class=\"where\">where\n    OP: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.reference.html\">&amp;T</a>) -&gt; U,</div></h4></section></summary><div class=\"docblock\"><p>Maps a function taking <code>WithKind&lt;I, &amp;T&gt;</code> over <code>&amp;WithKind&lt;I, T&gt;</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.skip_kind\" class=\"method\"><a class=\"src rightside\" href=\"src/chalk_ir/lib.rs.html#1599-1601\">source</a><h4 class=\"code-header\">pub fn <a href=\"chalk_ir/struct.WithKind.html#tymethod.skip_kind\" class=\"fn\">skip_kind</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.reference.html\">&amp;T</a></h4></section></summary><div class=\"docblock\"><p>Extract the value, ignoring the variable kind.</p>\n</div></details></div></details>",0,"chalk_ir::CanonicalVarKind"],["<section id=\"impl-Copy-for-WithKind%3CI,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/chalk_ir/lib.rs.html#1558\">source</a><a href=\"#impl-Copy-for-WithKind%3CI,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;I: <a class=\"trait\" href=\"chalk_ir/interner/trait.Interner.html\" title=\"trait chalk_ir::interner::Interner\">Interner</a>, T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> for <a class=\"struct\" href=\"chalk_ir/struct.WithKind.html\" title=\"struct chalk_ir::WithKind\">WithKind</a>&lt;I, T&gt;<div class=\"where\">where\n    I::<a class=\"associatedtype\" href=\"chalk_ir/interner/trait.Interner.html#associatedtype.InternedType\" title=\"type chalk_ir::interner::Interner::InternedType\">InternedType</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>,</div></h3></section>","Copy","chalk_ir::CanonicalVarKind"],["<section id=\"impl-Eq-for-WithKind%3CI,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/chalk_ir/lib.rs.html#1550\">source</a><a href=\"#impl-Eq-for-WithKind%3CI,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> + <a class=\"trait\" href=\"chalk_ir/interner/trait.Interner.html\" title=\"trait chalk_ir::interner::Interner\">Interner</a>, T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> for <a class=\"struct\" href=\"chalk_ir/struct.WithKind.html\" title=\"struct chalk_ir::WithKind\">WithKind</a>&lt;I, T&gt;</h3></section>","Eq","chalk_ir::CanonicalVarKind"],["<section id=\"impl-StructuralPartialEq-for-WithKind%3CI,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/chalk_ir/lib.rs.html#1550\">source</a><a href=\"#impl-StructuralPartialEq-for-WithKind%3CI,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;I: <a class=\"trait\" href=\"chalk_ir/interner/trait.Interner.html\" title=\"trait chalk_ir::interner::Interner\">Interner</a>, T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/marker/trait.StructuralPartialEq.html\" title=\"trait core::marker::StructuralPartialEq\">StructuralPartialEq</a> for <a class=\"struct\" href=\"chalk_ir/struct.WithKind.html\" title=\"struct chalk_ir::WithKind\">WithKind</a>&lt;I, T&gt;</h3></section>","StructuralPartialEq","chalk_ir::CanonicalVarKind"]],
"chalk_solve":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-WithKind%3CI,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/chalk_ir/lib.rs.html#1550\">source</a><a href=\"#impl-Clone-for-WithKind%3CI,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;I, T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"chalk_ir/struct.WithKind.html\" title=\"struct chalk_ir::WithKind\">WithKind</a>&lt;I, T&gt;<div class=\"where\">where\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"chalk_ir/interner/trait.Interner.html\" title=\"trait chalk_ir::interner::Interner\">Interner</a>,\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/chalk_ir/lib.rs.html#1550\">source</a><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.81.0/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; <a class=\"struct\" href=\"chalk_ir/struct.WithKind.html\" title=\"struct chalk_ir::WithKind\">WithKind</a>&lt;I, T&gt;</h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"https://doc.rust-lang.org/1.81.0/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.81.0/src/core/clone.rs.html#172\">source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.81.0/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.reference.html\">&amp;Self</a>)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/1.81.0/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","chalk_solve::infer::ParameterEnaVariable"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-WithKind%3CI,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/chalk_ir/debug.rs.html#948\">source</a><a href=\"#impl-Debug-for-WithKind%3CI,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;I, T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"chalk_ir/struct.WithKind.html\" title=\"struct chalk_ir::WithKind\">WithKind</a>&lt;I, T&gt;<div class=\"where\">where\n    I: <a class=\"trait\" href=\"chalk_ir/interner/trait.Interner.html\" title=\"trait chalk_ir::interner::Interner\">Interner</a>,\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/chalk_ir/debug.rs.html#949\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.81.0/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, fmt: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.81.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.81.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.81.0/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","chalk_solve::infer::ParameterEnaVariable"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-HasInterner-for-WithKind%3CI,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/chalk_ir/lib.rs.html#1560\">source</a><a href=\"#impl-HasInterner-for-WithKind%3CI,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;I, T&gt; <a class=\"trait\" href=\"chalk_ir/interner/trait.HasInterner.html\" title=\"trait chalk_ir::interner::HasInterner\">HasInterner</a> for <a class=\"struct\" href=\"chalk_ir/struct.WithKind.html\" title=\"struct chalk_ir::WithKind\">WithKind</a>&lt;I, T&gt;<div class=\"where\">where\n    I: <a class=\"trait\" href=\"chalk_ir/interner/trait.Interner.html\" title=\"trait chalk_ir::interner::Interner\">Interner</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Interner\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Interner\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"chalk_ir/interner/trait.HasInterner.html#associatedtype.Interner\" class=\"associatedtype\">Interner</a> = I</h4></section></summary><div class='docblock'>The interner associated with the type.</div></details></div></details>","HasInterner","chalk_solve::infer::ParameterEnaVariable"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Hash-for-WithKind%3CI,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/chalk_ir/lib.rs.html#1550\">source</a><a href=\"#impl-Hash-for-WithKind%3CI,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;I, T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> for <a class=\"struct\" href=\"chalk_ir/struct.WithKind.html\" title=\"struct chalk_ir::WithKind\">WithKind</a>&lt;I, T&gt;<div class=\"where\">where\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> + <a class=\"trait\" href=\"chalk_ir/interner/trait.Interner.html\" title=\"trait chalk_ir::interner::Interner\">Interner</a>,\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/chalk_ir/lib.rs.html#1550\">source</a><a href=\"#method.hash\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.81.0/core/hash/trait.Hash.html#tymethod.hash\" class=\"fn\">hash</a>&lt;__H&gt;(&amp;self, state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.reference.html\">&amp;mut __H</a>)<div class=\"where\">where\n    __H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>,</div></h4></section></summary><div class='docblock'>Feeds this value into the given <a href=\"https://doc.rust-lang.org/1.81.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"https://doc.rust-lang.org/1.81.0/core/hash/trait.Hash.html#tymethod.hash\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash_slice\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.3.0\">1.3.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.81.0/src/core/hash/mod.rs.html#238-240\">source</a></span><a href=\"#method.hash_slice\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.81.0/core/hash/trait.Hash.html#method.hash_slice\" class=\"fn\">hash_slice</a>&lt;H&gt;(data: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.slice.html\">[Self]</a>, state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.reference.html\">&amp;mut H</a>)<div class=\"where\">where\n    H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Feeds a slice of this type into the given <a href=\"https://doc.rust-lang.org/1.81.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"https://doc.rust-lang.org/1.81.0/core/hash/trait.Hash.html#method.hash_slice\">Read more</a></div></details></div></details>","Hash","chalk_solve::infer::ParameterEnaVariable"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-WithKind%3CI,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/chalk_ir/lib.rs.html#1550\">source</a><a href=\"#impl-PartialEq-for-WithKind%3CI,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;I, T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> for <a class=\"struct\" href=\"chalk_ir/struct.WithKind.html\" title=\"struct chalk_ir::WithKind\">WithKind</a>&lt;I, T&gt;<div class=\"where\">where\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> + <a class=\"trait\" href=\"chalk_ir/interner/trait.Interner.html\" title=\"trait chalk_ir::interner::Interner\">Interner</a>,\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/chalk_ir/lib.rs.html#1550\">source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.81.0/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"chalk_ir/struct.WithKind.html\" title=\"struct chalk_ir::WithKind\">WithKind</a>&lt;I, T&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>self</code> and <code>other</code> values to be equal, and is used\nby <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.81.0/src/core/cmp.rs.html#262\">source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.81.0/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>!=</code>. The default implementation is almost always\nsufficient, and should not be overridden without very good reason.</div></details></div></details>","PartialEq","chalk_solve::infer::ParameterEnaVariable"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-WithKind%3CI,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/chalk_ir/lib.rs.html#1570\">source</a><a href=\"#impl-WithKind%3CI,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;I, T&gt; <a class=\"struct\" href=\"chalk_ir/struct.WithKind.html\" title=\"struct chalk_ir::WithKind\">WithKind</a>&lt;I, T&gt;<div class=\"where\">where\n    I: <a class=\"trait\" href=\"chalk_ir/interner/trait.Interner.html\" title=\"trait chalk_ir::interner::Interner\">Interner</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.new\" class=\"method\"><a class=\"src rightside\" href=\"src/chalk_ir/lib.rs.html#1572\">source</a><h4 class=\"code-header\">pub fn <a href=\"chalk_ir/struct.WithKind.html#tymethod.new\" class=\"fn\">new</a>(kind: <a class=\"enum\" href=\"chalk_ir/enum.VariableKind.html\" title=\"enum chalk_ir::VariableKind\">VariableKind</a>&lt;I&gt;, value: T) -&gt; <a class=\"struct\" href=\"chalk_ir/struct.WithKind.html\" title=\"struct chalk_ir::WithKind\">WithKind</a>&lt;I, T&gt;</h4></section></summary><div class=\"docblock\"><p>Creates a <code>WithKind</code> from a variable kind and a value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.map\" class=\"method\"><a class=\"src rightside\" href=\"src/chalk_ir/lib.rs.html#1577-1579\">source</a><h4 class=\"code-header\">pub fn <a href=\"chalk_ir/struct.WithKind.html#tymethod.map\" class=\"fn\">map</a>&lt;U, OP&gt;(self, op: OP) -&gt; <a class=\"struct\" href=\"chalk_ir/struct.WithKind.html\" title=\"struct chalk_ir::WithKind\">WithKind</a>&lt;I, U&gt;<div class=\"where\">where\n    OP: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(T) -&gt; U,</div></h4></section></summary><div class=\"docblock\"><p>Maps the value in <code>WithKind</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.map_ref\" class=\"method\"><a class=\"src rightside\" href=\"src/chalk_ir/lib.rs.html#1588-1590\">source</a><h4 class=\"code-header\">pub fn <a href=\"chalk_ir/struct.WithKind.html#tymethod.map_ref\" class=\"fn\">map_ref</a>&lt;U, OP&gt;(&amp;self, op: OP) -&gt; <a class=\"struct\" href=\"chalk_ir/struct.WithKind.html\" title=\"struct chalk_ir::WithKind\">WithKind</a>&lt;I, U&gt;<div class=\"where\">where\n    OP: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.reference.html\">&amp;T</a>) -&gt; U,</div></h4></section></summary><div class=\"docblock\"><p>Maps a function taking <code>WithKind&lt;I, &amp;T&gt;</code> over <code>&amp;WithKind&lt;I, T&gt;</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.skip_kind\" class=\"method\"><a class=\"src rightside\" href=\"src/chalk_ir/lib.rs.html#1599\">source</a><h4 class=\"code-header\">pub fn <a href=\"chalk_ir/struct.WithKind.html#tymethod.skip_kind\" class=\"fn\">skip_kind</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.reference.html\">&amp;T</a></h4></section></summary><div class=\"docblock\"><p>Extract the value, ignoring the variable kind.</p>\n</div></details></div></details>",0,"chalk_solve::infer::ParameterEnaVariable"],["<section id=\"impl-Copy-for-WithKind%3CI,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/chalk_ir/lib.rs.html#1558\">source</a><a href=\"#impl-Copy-for-WithKind%3CI,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;I, T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> for <a class=\"struct\" href=\"chalk_ir/struct.WithKind.html\" title=\"struct chalk_ir::WithKind\">WithKind</a>&lt;I, T&gt;<div class=\"where\">where\n    I: <a class=\"trait\" href=\"chalk_ir/interner/trait.Interner.html\" title=\"trait chalk_ir::interner::Interner\">Interner</a>,\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>,\n    &lt;I as <a class=\"trait\" href=\"chalk_ir/interner/trait.Interner.html\" title=\"trait chalk_ir::interner::Interner\">Interner</a>&gt;::<a class=\"associatedtype\" href=\"chalk_ir/interner/trait.Interner.html#associatedtype.InternedType\" title=\"type chalk_ir::interner::Interner::InternedType\">InternedType</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>,</div></h3></section>","Copy","chalk_solve::infer::ParameterEnaVariable"],["<section id=\"impl-Eq-for-WithKind%3CI,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/chalk_ir/lib.rs.html#1550\">source</a><a href=\"#impl-Eq-for-WithKind%3CI,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;I, T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> for <a class=\"struct\" href=\"chalk_ir/struct.WithKind.html\" title=\"struct chalk_ir::WithKind\">WithKind</a>&lt;I, T&gt;<div class=\"where\">where\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> + <a class=\"trait\" href=\"chalk_ir/interner/trait.Interner.html\" title=\"trait chalk_ir::interner::Interner\">Interner</a>,\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a>,</div></h3></section>","Eq","chalk_solve::infer::ParameterEnaVariable"],["<section id=\"impl-StructuralPartialEq-for-WithKind%3CI,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/chalk_ir/lib.rs.html#1550\">source</a><a href=\"#impl-StructuralPartialEq-for-WithKind%3CI,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;I, T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/marker/trait.StructuralPartialEq.html\" title=\"trait core::marker::StructuralPartialEq\">StructuralPartialEq</a> for <a class=\"struct\" href=\"chalk_ir/struct.WithKind.html\" title=\"struct chalk_ir::WithKind\">WithKind</a>&lt;I, T&gt;<div class=\"where\">where\n    I: <a class=\"trait\" href=\"chalk_ir/interner/trait.Interner.html\" title=\"trait chalk_ir::interner::Interner\">Interner</a>,</div></h3></section>","StructuralPartialEq","chalk_solve::infer::ParameterEnaVariable"]]
};if (window.register_type_impls) {window.register_type_impls(type_impls);} else {window.pending_type_impls = type_impls;}})()