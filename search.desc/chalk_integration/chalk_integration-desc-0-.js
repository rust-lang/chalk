searchState.loadedDescShard("chalk_integration", 0, "Run the recursive solver.\nRun the SLG solver, producing a Solution.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns a recursive solver with specific parameters.\nReturns the default recursive solver setup.\nReturns specific SLG parameters.\nReturns the default SLG parameters.\nUseful macros for writing unit tests. They let you gin up …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nSolves a given goal, producing the solution. This will do …\nWrapper type for the various errors that can occur during …\nFor now, we just convert the error into a string, which …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe default “interner” and the only interner used by …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nInformation about an associated type <strong>declaration</strong> (i.e., an …\nContains the error value\nContains the success value\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nIntroduces new parameters, shifting the indices of existing\nGenericArg identifiers are used as keys, therefore all …\nCreate ids for associated type declarations and values\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nFor each ADT:\nFrom ADT name to item-id. Used during lowering only.\nFor each ADT:\nFor each associated ty declaration <code>type Foo</code> found in a …\nFor each associated ty value <code>type Foo = XXX</code> found in an …\nFor each coroutine\nFor each user-specified clause\nFor each foreign type <code>extern { type A; }</code>\nReturns the argument unchanged.\nStores the hidden types for opaque types\nFor each impl:\nCalls <code>U::from(self)</code>.\nReturns the ids for all impls declared in this crate.\nStore the traits marked with <code>#[object_safe]</code>\nFor each opaque type:\nFor each opaque type:\nFor each trait:\nFrom trait name to item-id. Used during lowering only.\nFor each trait:\nFor each trait lang item\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCompiled forms of the above:\nRepresentative struct for the query group.\nThe lowered IR, with coherence, orphan, and WF checks …\nPerforms coherence check and computes which impls …\nThe program as logic.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet access to extra methods pertaining to this query. For …\nGet access to extra methods pertaining to this query. For …\nGet access to extra methods pertaining to this query. For …\nGet access to extra methods pertaining to this query. For …\nGet access to extra methods pertaining to this query. For …\nGet access to extra methods pertaining to this query. For …\nGet access to extra methods pertaining to this query. For …\nGet access to extra methods pertaining to this query. For …\nLike <code>in_db</code>, but gives access to methods for setting the …\nLike <code>in_db</code>, but gives access to methods for setting the …\nLike <code>in_db</code>, but gives access to methods for setting the …\nLike <code>in_db</code>, but gives access to methods for setting the …\nLike <code>in_db</code>, but gives access to methods for setting the …\nLike <code>in_db</code>, but gives access to methods for setting the …\nLike <code>in_db</code>, but gives access to methods for setting the …\nLike <code>in_db</code>, but gives access to methods for setting the …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nSet the value of the <code>program_text</code> input.\nSet the value of the <code>program_text</code> input and promise that …\nSet the value of the <code>solver_choice</code> input.\nSet the value of the <code>solver_choice</code> input and promise that …\nCreates the solver we can use to solve goals. This solver …")